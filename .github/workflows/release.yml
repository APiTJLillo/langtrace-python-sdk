name: Versioning

on:
  push:
    branches:
      - development

jobs:
  versioning:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        pip install hatch

    - name: Bump version
      run: |
        hatch version patch
        git push origin development

    - name: Tag release
      run: |
        git tag $(hatch version)
        git push origin --tags
# name: Publish Python üêç distributions üì¶ to PyPI

# on: 
#   push:
#     branches:
#        - development
# jobs: 
#   build:
#     runs-on: ubuntu-latest
#     strategy:
#       matrix:
#         python-version: ['3.9']
    
#     steps:
#       - uses: actions/checkout@v3
#       - name: Install Poetry
#         run: pipx install poetry
#       - name: Set up Python ${{ matrix.python-version }}
#         uses: actions/setup-python@v4
#         with:
#           python-version: ${{ matrix.python-version }}
#           cache: 'poetry'
#       - name: Install dependencies
#         run: poetry install
#       - name: Test with Pytest
#         run: poetry run pytest
#       - name: Lint with flake8
#         run: poetry run flake8
#   release:
#     needs: build
#     if: github.event_name == 'push' && github.ref == 'refs/heads/main'
#     runs-on: ubuntu-latest
#     strategy:
#       matrix:
#         python-version: ["3.9"]
#     steps:
#       - uses: actions/checkout@v3
#         with:
#           fetch-depth: 0
#       - name: Install Poetry
#         run: pipx install poetry
#       - name: Set up Python ${{ matrix.python-version }}
#         uses: actions/setup-python@v4
#         with:
#           python-version: ${{ matrix.python-version }}

#       - name: Install dependencies
#         run: poetry install
#       - name: Prepare package for release
#         env:
#           GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#         run: |
#           git config user.name github-actions
#           git config user.email github-actions@github.com
#           poetry run semantic-release publish
#       - name: Publish to PyPI üì¶
#         uses: pypa/gh-action-pypi-publish@release/v1
#         with:
#           user: __token__
#           password: ${{ secrets.PYPI_TOKEN }}



